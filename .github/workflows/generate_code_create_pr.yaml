name: '[Reusable Workflow] Generate Code'
on:
  workflow_call:
    inputs:
      report_id:
        description: 'Business partner report ID'
        required: true
        type: string
      report_version:
        description: 'Business partner report version'
        required: true
        type: string
      dispatched_at:
        description: 'Dispatch timestamp in yyyyMMdd_HHmm'
        required: true
        type: string
      artifact_base_url:
        description: 'Path to read prompt, inputs, expected outputs and to store generated code'
        required: true
        type: string
      pr_draft:
        description: 'Whether to mark the pull request as draft'
        required: false
        type: boolean
        default: false
      pr_branch_prefix:
        description: 'Prefix for the pull request branch name'
        required: false
        type: string
        default: ""
      pr_title_prefix:
        description: 'Prefix for the pull request title'
        required: false
        type: string
        default: ""

permissions:
  contents: write
  pull-requests: write

env:
  REPORT_ID_WITH_VER: "${{ inputs['report_id'] }}-${{ inputs['report_version'] }}"
  DISPATCH_ID: "${{ inputs['report_id'] }}-${{ inputs['report_version'] }}-${{ inputs['dispatched_at'] }}"

jobs:
  generate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [variant1]
#        variant: [variant1, variant2, variant3, variant4, variant5]
      max-parallel: 5
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Run generator for ${{ matrix.variant }}
        run: python scripts/generator.py > "$DISPATCH_ID-${{ matrix.variant }}.py"

      - name: Upload all variants
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DISPATCH_ID }}-${{ matrix.variant }}
          path: "${{ env.DISPATCH_ID }}-${{ matrix.variant }}.py"
          retention-days: 7

  score:
    needs: generate
    runs-on: ubuntu-latest
    outputs:
      test-results: ${{ steps.test.outputs.results }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all variants
        uses: actions/download-artifact@v5
        with:
          path: artifacts/
          merge-multiple: true

      - name: Download test files
        run: python scripts/setup_tests.py

      - name: Run tests and select best variant
        id: test
        run: |
          python scripts/run_tests.py
          echo "selected=$(cat selected.txt)" >> $GITHUB_OUTPUT
          { echo 'results<<EOF'; cat test_results.md; echo 'EOF'; } >> "$GITHUB_OUTPUT"
          # Optional show results in Github step summary.
          # cat test_results.md >> $GITHUB_STEP_SUMMARY

      - name: Rename file
        run: mv "${{ steps.test.outputs.selected }}" "./artifacts/$REPORT_ID_WITH_VER.py"

      - name: Upload best variant
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPORT_ID_WITH_VER }}
          path: "artifacts/${{ env.REPORT_ID_WITH_VER }}.py"
          retention-days: 7

  create-pull-request:
    needs: score
    runs-on: ubuntu-latest
    outputs:
      pull-request-url: ${{ steps.cpr.outputs.pull-request-url }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download best variant
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.REPORT_ID_WITH_VER }}
          path: scaffold/${{ inputs['report_id'] }}/

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e #v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sign-commits: true
          add-paths: scaffold/
          commit-message: Add ${{env.REPORT_ID_WITH_VER}}.py
          branch: ${{ inputs['pr_branch_prefix'] }}${{env.DISPATCH_ID}}
          title: ${{ inputs['pr_title_prefix'] }}Add ${{env.REPORT_ID_WITH_VER}}
          body: | 
            Add ${{env.REPORT_ID_WITH_VER}}.py
            ---
            ${{ needs.score.outputs.test-results }}"
            ---
            This PR was generated by Github Action. View the [action log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          draft: ${{ inputs['pr_draft'] }}

  notify:
    needs: [generate, score, create-pull-request]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify the initiator
        # This will be empty if previous job failed
        run: echo "Pull Request URL is ${{ needs.create-pull-request.outputs.pull-request-url }}"
