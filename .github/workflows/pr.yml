name: Code Generation
on:
  workflow_dispatch:
    inputs:
      run-prefix:
        description: 'Run prefix {report_id}-{version}'
        required: true

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [variant1, variant2]
      max-parallel: 5
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run generator for ${{ matrix.variant }}
        run: |
          python scripts/generator.py > ${{ github.event.inputs['run-prefix'] }}-${{ matrix.variant }}.py

      - name: Upload code variants
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs['run-prefix'] }}-${{ matrix.variant }}
          path: ${{ github.event.inputs['run-prefix'] }}-${{ matrix.variant }}.py
          retention-days: 7

  score:
    needs: generate
    runs-on: ubuntu-latest
    outputs:
      best: ${{ steps.select.outputs.best }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download code variants
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: Download test files
        run: python scripts/setup_tests.py

      - name: Run tests and select best candidate
        id: select
        run: |
          # Expect run_tests.py to append `best=xxx.py` to $GITHUB_OUTPUT
          python scripts/run_tests.py

      - name: Upload best variant
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs['run-prefix'] }}
          path: ${{ github.event.inputs['run-prefix'] }}.py
          retention-days: 7

  commit:
    needs: score
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout repo
      #   uses: actions/checkout@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download best variant
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          merge-multiple: true

      - name: Commit to repo
        run: |
          BEST_PATH="${{ needs.score.outputs.best }}"
          echo $BEST_PATH
          # BASE_NAME=$(basename "$FILE_PATH")
          # NEW_BEST_PATH="${BASE_NAME%-variant*}.py"

      - name: Create Pull Request
        # 271a8d0340265f705b14b6d32b9829c1cb33d45e is the SHA of v7.0.8 
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          add-paths: artifacts/
          commit-message: Add ${{ github.event.inputs['run-prefix'] }}.py
          branch: ${{ github.event.inputs['run-prefix'] }}
          branch-suffix: timestamp
          title: Add ${{ github.event.inputs['run-prefix'] }}
          body: Add ${{ github.event.inputs['run-prefix'] }}.py
          draft: false

      # - name: Commit to repo
      #   run: |
      #     BEST_PATH="${{ needs.score.outputs.best }}"
      #     echo $BEST_PATH
      #     BASE_NAME=$(basename "$FILE_PATH")
      #     NEW_BEST_PATH="${BASE_NAME%-variant*}.py"

      #     BASE_BRANCH="${{ github.event.inputs['run-prefix'] }}"
      #     COMMIT_BRANCH="$BASE_BRANCH"
      #     COUNTER=2
          
      #     # Loop until we find a branch name that doesn't exist on the remote
      #     while git ls-remote --exit-code --heads origin "$COMMIT_BRANCH" > /dev/null; do
      #       COMMIT_BRANCH="${BASE_BRANCH}-$COUNTER"
      #       COUNTER=$((COUNTER + 1))
      #     done
          
      #     # Fail if branch already exists since there seems to be an unexpected race condition
      #     git checkout -b $COMMIT_BRANCH
      #     git config user.name "github-actions[bot]"
      #     git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git add $NEW_BEST_PATH
      #     git commit -m "Add $NEW_BEST_PATH"
      #     git push origin $COMMIT_BRANCH
